{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\nexport default function useModals() {\n  _s();\n  const {\n    open,\n    close\n  } = useContext(ModalsDispatchContext);\n  const navigate = useNavigate();\n\n  // 브라우저의 뒤로가기 버튼을 감지하기 위한 popstate 이벤트 핸들러 함수\n  const handlePopstate = () => {\n    // 모달을 닫음\n    close();\n\n    // popstate 이벤트 리스너를 여러 번 등록하는 것을 방지하기 위해 제거\n    window.removeEventListener('popstate', handlePopstate);\n  };\n\n  // 컴포넌트가 마운트될 때 popstate 이벤트 리스너 추가\n  useEffect(() => {\n    window.addEventListener('popstate', handlePopstate);\n\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [close]); // `close`가 변경될 때마다 리스너를 다시 추가\n\n  const openModal = (Component, props) => {\n    // 모달을 엶\n    open(Component, props);\n  };\n  const closeModal = () => {\n    // 모달을 닫음\n    close();\n  };\n  return {\n    openModal,\n    closeModal\n  };\n}\n_s(useModals, \"rlVh1JRA48hiQjVzwWkxMgVJzHA=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useEffect","useContext","useNavigate","ModalsDispatchContext","useModals","_s","open","close","navigate","handlePopstate","window","removeEventListener","addEventListener","openModal","Component","props","closeModal"],"sources":["/Users/maegmini/Documents/study/pension-bonjour/src/components/hooks/useModals.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\n\nexport default function useModals() {\n\tconst { open, close } = useContext(ModalsDispatchContext);\n\tconst navigate = useNavigate();\n\n\t// 브라우저의 뒤로가기 버튼을 감지하기 위한 popstate 이벤트 핸들러 함수\n\tconst handlePopstate = () => {\n\t\t// 모달을 닫음\n\t\tclose();\n\n\t\t// popstate 이벤트 리스너를 여러 번 등록하는 것을 방지하기 위해 제거\n\t\twindow.removeEventListener('popstate', handlePopstate);\n\t};\n\n\t// 컴포넌트가 마운트될 때 popstate 이벤트 리스너 추가\n\tuseEffect(() => {\n\t\twindow.addEventListener('popstate', handlePopstate);\n\n\t\t// 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n\t\treturn () => {\n\t\t\twindow.removeEventListener('popstate', handlePopstate);\n\t\t};\n\t}, [close]); // `close`가 변경될 때마다 리스너를 다시 추가\n\n\tconst openModal = (Component, props) => {\n\t\t// 모달을 엶\n\t\topen(Component, props);\n\t};\n\n\tconst closeModal = () => {\n\t\t// 모달을 닫음\n\t\tclose();\n\t};\n\n\treturn {\n\t\topenModal,\n\t\tcloseModal,\n\t};\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,qBAAqB,QAAQ,wBAAwB;AAE9D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGN,UAAU,CAACE,qBAAqB,CAAC;EACzD,MAAMK,QAAQ,GAAGN,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC5B;IACAF,KAAK,CAAC,CAAC;;IAEP;IACAG,MAAM,CAACC,mBAAmB,CAAC,UAAU,EAAEF,cAAc,CAAC;EACvD,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACfU,MAAM,CAACE,gBAAgB,CAAC,UAAU,EAAEH,cAAc,CAAC;;IAEnD;IACA,OAAO,MAAM;MACZC,MAAM,CAACC,mBAAmB,CAAC,UAAU,EAAEF,cAAc,CAAC;IACvD,CAAC;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMM,SAAS,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACvC;IACAT,IAAI,CAACQ,SAAS,EAAEC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACxB;IACAT,KAAK,CAAC,CAAC;EACR,CAAC;EAED,OAAO;IACNM,SAAS;IACTG;EACD,CAAC;AACF;AAACX,EAAA,CArCuBD,SAAS;EAAA,QAEfF,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
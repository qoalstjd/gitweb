{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\nexport default function useModals() {\n  _s();\n  const {\n    open,\n    close\n  } = useContext(ModalsDispatchContext);\n  const history = useHistory();\n\n  // Function to handle the popstate event\n  const handlePopstate = () => {\n    // Close the modal when the user navigates back\n    close();\n\n    // Remove the event listener to avoid multiple bindings\n    window.removeEventListener('popstate', handlePopstate);\n  };\n\n  // Effect to add the popstate event listener when the component mounts\n  useEffect(() => {\n    window.addEventListener('popstate', handlePopstate);\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [close]); // Re-add the listener if `close` changes\n\n  const openModal = (Component, props) => {\n    // Open the modal\n    open(Component, props);\n  };\n  const closeModal = () => {\n    // Close the modal\n    close();\n  };\n  return {\n    openModal,\n    closeModal\n  };\n}\n_s(useModals, \"DqcFM1VeooT1SVtnuTxbCQVJKv8=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"names":["useEffect","useContext","useHistory","ModalsDispatchContext","useModals","_s","open","close","history","handlePopstate","window","removeEventListener","addEventListener","openModal","Component","props","closeModal"],"sources":["/Users/maegmini/Documents/study/pension-bonjour/src/components/hooks/useModals.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\n\nexport default function useModals() {\n\tconst { open, close } = useContext(ModalsDispatchContext);\n\tconst history = useHistory();\n\n\t// Function to handle the popstate event\n\tconst handlePopstate = () => {\n\t\t// Close the modal when the user navigates back\n\t\tclose();\n\n\t\t// Remove the event listener to avoid multiple bindings\n\t\twindow.removeEventListener('popstate', handlePopstate);\n\t};\n\n\t// Effect to add the popstate event listener when the component mounts\n\tuseEffect(() => {\n\t\twindow.addEventListener('popstate', handlePopstate);\n\n\t\t// Clean up the event listener when the component unmounts\n\t\treturn () => {\n\t\t\twindow.removeEventListener('popstate', handlePopstate);\n\t\t};\n\t}, [close]); // Re-add the listener if `close` changes\n\n\tconst openModal = (Component, props) => {\n\t\t// Open the modal\n\t\topen(Component, props);\n\t};\n\n\tconst closeModal = () => {\n\t\t// Close the modal\n\t\tclose();\n\t};\n\n\treturn {\n\t\topenModal,\n\t\tcloseModal,\n\t};\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,qBAAqB,QAAQ,wBAAwB;AAE9D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGN,UAAU,CAACE,qBAAqB,CAAC;EACzD,MAAMK,OAAO,GAAGN,UAAU,CAAC,CAAC;;EAE5B;EACA,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC5B;IACAF,KAAK,CAAC,CAAC;;IAEP;IACAG,MAAM,CAACC,mBAAmB,CAAC,UAAU,EAAEF,cAAc,CAAC;EACvD,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACfU,MAAM,CAACE,gBAAgB,CAAC,UAAU,EAAEH,cAAc,CAAC;;IAEnD;IACA,OAAO,MAAM;MACZC,MAAM,CAACC,mBAAmB,CAAC,UAAU,EAAEF,cAAc,CAAC;IACvD,CAAC;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMM,SAAS,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACvC;IACAT,IAAI,CAACQ,SAAS,EAAEC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACxB;IACAT,KAAK,CAAC,CAAC;EACR,CAAC;EAED,OAAO;IACNM,SAAS;IACTG;EACD,CAAC;AACF;AAACX,EAAA,CArCuBD,SAAS;EAAA,QAEhBF,UAAU;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
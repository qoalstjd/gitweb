{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\nconst history = createBrowserHistory();\nexport default function useModals() {\n  _s();\n  const {\n    open,\n    close\n  } = useContext(ModalsDispatchContext);\n  const [currentModal, setCurrentModal] = useState(null);\n  const openModal = (Component, props) => {\n    open(Component, props);\n    history.push('/new-path');\n    setCurrentModal(Component);\n  };\n  const closeModal = Component => {\n    if (Component && Component.props && Component.props._ref) {\n      const {\n        onClose\n      } = Component.props._ref;\n\n      // onClose 함수를 호출하거나 다른 닫기 로직을 수행\n      if (onClose) {\n        onClose();\n      }\n\n      // 히스토리에서 뒤로 이동\n      history.goBack();\n    }\n  };\n  const unlisten = history.listen((location, action) => {\n    const currentPath = location.pathname;\n    if (currentPath !== '/popup' && currentModal) {\n      close(currentModal);\n      setCurrentModal(null);\n    }\n  });\n  useEffect(() => {\n    return () => {\n      unlisten();\n    };\n  }, [unlisten]);\n  return {\n    openModal,\n    closeModal\n  };\n}\n_s(useModals, \"DpLXYXAyOAWec6c7I6XdLejMGZQ=\");","map":{"version":3,"names":["useContext","useState","useEffect","createBrowserHistory","ModalsDispatchContext","history","useModals","_s","open","close","currentModal","setCurrentModal","openModal","Component","props","push","closeModal","_ref","onClose","goBack","unlisten","listen","location","action","currentPath","pathname"],"sources":["/Users/maegmini/Documents/study/pension-bonjour/src/components/hooks/useModals.js"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\n\nconst history = createBrowserHistory();\n\nexport default function useModals() {\n\tconst { open, close } = useContext(ModalsDispatchContext);\n\tconst [currentModal, setCurrentModal] = useState(null);\n\n\tconst openModal = (Component, props) => {\n\t\topen(Component, props);\n\t\thistory.push('/new-path');\n\t\tsetCurrentModal(Component);\n\t};\n\n\tconst closeModal = (Component) => {\n\t\tif (Component && Component.props && Component.props._ref) {\n\t\t\tconst { onClose } = Component.props._ref;\n\n\t\t\t// onClose 함수를 호출하거나 다른 닫기 로직을 수행\n\t\t\tif (onClose) {\n\t\t\t\tonClose();\n\t\t\t}\n\n\t\t\t// 히스토리에서 뒤로 이동\n\t\t\thistory.goBack();\n\t\t}\n\t};\n\n\tconst unlisten = history.listen((location, action) => {\n\t\tconst currentPath = location.pathname;\n\t\tif (currentPath !== '/popup' && currentModal) {\n\t\t\tclose(currentModal);\n\t\t\tsetCurrentModal(null);\n\t\t}\n\t});\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunlisten();\n\t\t};\n\t}, [unlisten]);\n\n\treturn {\n\t\topenModal,\n\t\tcloseModal,\n\t};\n}\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,qBAAqB,QAAQ,wBAAwB;AAE9D,MAAMC,OAAO,GAAGF,oBAAoB,CAAC,CAAC;AAEtC,eAAe,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGT,UAAU,CAACI,qBAAqB,CAAC;EACzD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,SAAS,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACvCN,IAAI,CAACK,SAAS,EAAEC,KAAK,CAAC;IACtBT,OAAO,CAACU,IAAI,CAAC,WAAW,CAAC;IACzBJ,eAAe,CAACE,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMG,UAAU,GAAIH,SAAS,IAAK;IACjC,IAAIA,SAAS,IAAIA,SAAS,CAACC,KAAK,IAAID,SAAS,CAACC,KAAK,CAACG,IAAI,EAAE;MACzD,MAAM;QAAEC;MAAQ,CAAC,GAAGL,SAAS,CAACC,KAAK,CAACG,IAAI;;MAExC;MACA,IAAIC,OAAO,EAAE;QACZA,OAAO,CAAC,CAAC;MACV;;MAEA;MACAb,OAAO,CAACc,MAAM,CAAC,CAAC;IACjB;EACD,CAAC;EAED,MAAMC,QAAQ,GAAGf,OAAO,CAACgB,MAAM,CAAC,CAACC,QAAQ,EAAEC,MAAM,KAAK;IACrD,MAAMC,WAAW,GAAGF,QAAQ,CAACG,QAAQ;IACrC,IAAID,WAAW,KAAK,QAAQ,IAAId,YAAY,EAAE;MAC7CD,KAAK,CAACC,YAAY,CAAC;MACnBC,eAAe,CAAC,IAAI,CAAC;IACtB;EACD,CAAC,CAAC;EACFT,SAAS,CAAC,MAAM;IACf,OAAO,MAAM;MACZkB,QAAQ,CAAC,CAAC;IACX,CAAC;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OAAO;IACNR,SAAS;IACTI;EACD,CAAC;AACF;AAACT,EAAA,CAzCuBD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
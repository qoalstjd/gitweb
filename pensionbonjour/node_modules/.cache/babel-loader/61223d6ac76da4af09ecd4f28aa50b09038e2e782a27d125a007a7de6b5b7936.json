{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\nconst history = createBrowserHistory();\nexport default function useModals() {\n  _s();\n  const {\n    open,\n    close\n  } = useContext(ModalsDispatchContext);\n\n  // 브라우저의 뒤로가기 버튼을 감지하기 위한 popstate 이벤트 핸들러 함수\n  const handlePopstate = () => {\n    // 모달을 닫음\n    close();\n  };\n\n  // 컴포넌트가 마운트될 때 popstate 이벤트 리스너 추가\n  useEffect(() => {\n    window.addEventListener('popstate', handlePopstate);\n\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('popstate', handlePopstate);\n    };\n  }, [close]); // `close`가 변경될 때마다 리스너를 다시 추가\n\n  const openModal = (Component, props) => {\n    // 모달을 엶\n    open(Component, props);\n  };\n  const closeModal = () => {\n    // 모달을 닫음\n    close();\n    // 브라우저 히스토리에서도 업데이트\n    history.goBack();\n  };\n  return {\n    openModal,\n    closeModal\n  };\n}\n_s(useModals, \"NELg9m7CsPs220glqywxEw0Sq3Y=\");","map":{"version":3,"names":["useEffect","useContext","createBrowserHistory","ModalsDispatchContext","history","useModals","_s","open","close","handlePopstate","window","addEventListener","removeEventListener","openModal","Component","props","closeModal","goBack"],"sources":["/Users/maegmini/Documents/study/pension-bonjour/src/components/hooks/useModals.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { createBrowserHistory } from 'history';\nimport { ModalsDispatchContext } from '../modal/ModalsContext';\n\nconst history = createBrowserHistory();\n\nexport default function useModals() {\n\tconst { open, close } = useContext(ModalsDispatchContext);\n\n\t// 브라우저의 뒤로가기 버튼을 감지하기 위한 popstate 이벤트 핸들러 함수\n\tconst handlePopstate = () => {\n\t\t// 모달을 닫음\n\t\tclose();\n\t};\n\n\t// 컴포넌트가 마운트될 때 popstate 이벤트 리스너 추가\n\tuseEffect(() => {\n\t\twindow.addEventListener('popstate', handlePopstate);\n\n\t\t// 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n\t\treturn () => {\n\t\t\twindow.removeEventListener('popstate', handlePopstate);\n\t\t};\n\t}, [close]); // `close`가 변경될 때마다 리스너를 다시 추가\n\n\tconst openModal = (Component, props) => {\n\t\t// 모달을 엶\n\t\topen(Component, props);\n\t};\n\n\tconst closeModal = () => {\n\t\t// 모달을 닫음\n\t\tclose();\n\t\t// 브라우저 히스토리에서도 업데이트\n\t\thistory.goBack();\n\t};\n\n\treturn {\n\t\topenModal,\n\t\tcloseModal,\n\t};\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,qBAAqB,QAAQ,wBAAwB;AAE9D,MAAMC,OAAO,GAAGF,oBAAoB,CAAC,CAAC;AAEtC,eAAe,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGP,UAAU,CAACE,qBAAqB,CAAC;;EAEzD;EACA,MAAMM,cAAc,GAAGA,CAAA,KAAM;IAC5B;IACAD,KAAK,CAAC,CAAC;EACR,CAAC;;EAED;EACAR,SAAS,CAAC,MAAM;IACfU,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAEF,cAAc,CAAC;;IAEnD;IACA,OAAO,MAAM;MACZC,MAAM,CAACE,mBAAmB,CAAC,UAAU,EAAEH,cAAc,CAAC;IACvD,CAAC;EACF,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMK,SAAS,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACvC;IACAR,IAAI,CAACO,SAAS,EAAEC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACxB;IACAR,KAAK,CAAC,CAAC;IACP;IACAJ,OAAO,CAACa,MAAM,CAAC,CAAC;EACjB,CAAC;EAED,OAAO;IACNJ,SAAS;IACTG;EACD,CAAC;AACF;AAACV,EAAA,CAnCuBD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}